stages:
    - test
    - sonarqube-check
    - sonarqube-vulnerability-report
    - deploy


test:
  stage: test
  image: node:14
  script:
    - npm install
    - npm test -- --coverage
    - cp "${BD_CJS}" "${CI_PROJECT_DIR}"/src/bd.cjs
    - echo "${BD_CJS}"
    - ls
    - cat "${CI_PROJECT_DIR}"/src/bd.cjs
  only:
    - merge_requests
    - master
    - main
    - develop
  artifacts:
    paths:
      - coverage # Save coverage directory as an artifact

sonarqube-check:
  stage: sonarqube-check
  image: 
    name: sonarsource/sonar-scanner-cli:5.0
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner -X 
  allow_failure: true
  only:
    - /^.*$/      # Trigger on all branches and tags
    # - merge_requests
    # - master
    # - main
    # - develop

sonarqube-vulnerability-report:
  stage: sonarqube-vulnerability-report
  image: 
    name: sonarsource/sonar-scanner-cli:5.0
    entrypoint: [""]
  script:
    - 'curl -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=mif10-grp101_mif10_AY6Kkky0u4zgX3p-IR-F&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
  allow_failure: true
  only:
    - /^.*$/      # Trigger on all branches and tags
    # - merge_requests
    # - master
    # - main
    # - develop
  artifacts:
    expire_in: 1 day
    reports:
      sast: gl-sast-sonar-report.json
  dependencies:
    - sonarqube-check

deploy:
  stage: deploy
  image: alpine
  only:
    - master
    - main
  before_script:
    - apk update && apk add openssh
    - chmod 400 "${CI_GITLAB_KEY}"
  script:
  # Backend
    - scp -r -o StrictHostKeyChecking=no -i "${CI_GITLAB_KEY}" "${CI_PROJECT_DIR}"/src/backend gitlabci@192.168.75.17:/opt/server/.
  # Frontend
    - scp -r -o StrictHostKeyChecking=no -i "${CI_GITLAB_KEY}" "${CI_PROJECT_DIR}"/src/frontend gitlabci@192.168.75.17:/opt/server/.
  # Server
    - scp -r -o StrictHostKeyChecking=no -i "${CI_GITLAB_KEY}" "${CI_PROJECT_DIR}"/src/server-* "${CI_PROJECT_DIR}"/src/vite.config.js "${CI_PROJECT_DIR}"/src/index.html gitlabci@192.168.75.17:/opt/server/.
  when: manual

variables:
  SONAR_PROJECT_KEY: "mif10-grp101_mif10_AY6Kkky0u4zgX3p-IR-F"
  SONAR_PROJECT_NAME: "mif10"
  SONAR_PROJECT_VERSION: "1.0.0"
  SONAR_SOURCES: "src"
  SONAR_TESTS: "test"
  SONAR_JAVASCRIPT_LCOV_REPORTPATHS: "coverage/lcov.info"